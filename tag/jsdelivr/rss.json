{
    "version": "https://jsonfeed.org/version/1",
    "title": "Lete乐特 's Blog • All posts by \"jsdelivr\" tag",
    "description": "我相信我可以，但我一直在路上，所以我有无限的可能！！",
    "home_page_url": "https://blog.imlete.cn",
    "items": [
        {
            "id": "https://blog.imlete.cn/article/jsdelivr-video.html",
            "url": "https://blog.imlete.cn/article/jsdelivr-video.html",
            "title": "利用jsdelivr搭建视频床",
            "date_published": "2020-11-22T19:17:56.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>相信很多人都用过图床，大部分都是利用jsdelivr当图床，从而得到一个免费的图床，并且自带CDN加速<br>但是有很多人想存储视频这么办呢？有没有视频床呢？把视频上传仓库后，jsdelivr是能抓取的，而且也能用<br>不过只能存储20MB以内的资源，并且jsdelivr不能解析视频类资源，打开视频格式的链接会自动下载，无法播放<br>那怎么办呢？只要你想就没有你做不到的，那么就在此记录一下过程，就不多说废话了，看正文 &lt;(￣︶￣)↗[GO!]</p>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>首先你得了解jsdelivr，他只加载20MB以内的资源，如果你的视频正好控制这一范围的话，你就可以使用默认的内容了<br>但是由于jsdelivr对视频资源的解析不友好，所以我们就得对视频资源做一定的处理</p>\n<p>用过QQ浏览器的都知道下载网页上的视频下来都是M3U8的视频格式，即使你不下载，只是看视频都会产生M3U8文件和TS文件</p>\n<h2 id=\"什么是M3U8、TS文件？\"><a href=\"#什么是M3U8、TS文件？\" class=\"headerlink\" title=\"什么是M3U8、TS文件？\"></a>什么是M3U8、TS文件？</h2><p><strong>M3U8</strong><br>M3U8是指UTF-8编码格式的M3U文件(M3U使用Latin-1字符集编码)<br>M3U文件是一个记录索引的纯文本文件，打开它时播放软件并不会播放它<br>而是根据它的索引找到对应的音视频文件的网络地址进行在线播放</p>\n<p><strong>TS</strong><br>ts是日本高清摄像机拍摄下进行的封装格式，全称为MPEG2-TS。ts即”Transport Stream”的缩写。<br>将一个视频文件(MP4)切片分为很多个TS文件，一个TS文件的视频时常可以自定义，比如切片为5秒<br>那么其他ts文件也是5秒，但是这个不是完全准确，也就是说会有误差，会产生4-7秒左右的ts视频文件</p>\n<p>那他是这么工作的呢？(以下图片是本地运行过程)</p>\n<p><img src=\"/img/Jsdelivr-Video/m3u8-ts.png\" alt=\"m3u8-ts\"></p>\n<h2 id=\"ffmpeg-工具\"><a href=\"#ffmpeg-工具\" class=\"headerlink\" title=\"ffmpeg 工具\"></a>ffmpeg 工具</h2><p>什么是ffmpeg在这里我就不再赘述了，感兴趣的可以自行搜索</p>\n<p>了解了M3U8和TS，我该怎么把视频切片呢?<br>使用ffmpeg 工具进行切片</p>\n<p>官网：<a href=\"https://ffmpeg.org/download.html\">https://ffmpeg.org/download.html</a></p>\n<p>下载解压后打开<code>bin</code>目录，在里面找到<code>ffmpeg.exe</code>复制到自己新建的一个文件夹里，再把想要切片的视频Copy进来</p>\n<h2 id=\"视频切片\"><a href=\"#视频切片\" class=\"headerlink\" title=\"视频切片\"></a>视频切片</h2><blockquote>\n<p>当前目录下有<br>Lete.mp4<br>ffmpeg.exe</p>\n</blockquote>\n<p>打开cmd，cd进入到刚刚新建的文件夹，关于怎么操作我就不多bb了<br>既然都用上Github，用jsdelivr加速了，你电脑里一定装了Git工具<br>在当前目录打开<code>Git Bash</code> 命令行</p>\n<p>(cmd不需要<code>./</code>)</p>\n<ol>\n<li>将mp4转成ts格式，1对1，转换后视频质量与大小无变化。(执行下方代码得到<code>Lete.ts</code>)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./ffmpeg.exe -y -i Lete.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb Lete.ts</span><br></pre></td></tr></table></figure></li>\n<li>按时间隔分片，1对N，下面的5即<code>每个分片5秒</code>，自行修改<br><code>-segment_list Lete.m3u8</code>为切片后得到的m3u8文件<br><code>-segment_time 5 Lete%03d.ts</code>为切片后得到的ts文件名<code>5</code>代表每个ts文件5秒播放时常(有误差，不完全5秒)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./ffmpeg -i Lete.ts -c copy -map 0 -f segment -segment_list Lete.m3u8 -segment_time 5 Lete%03d.ts</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这是你的文件了会有如下图文件<br><img src=\"/img/Jsdelivr-Video/1.png\" alt=\"\"></p>\n<p>将这几个文件push到仓库即可<br><img src=\"/img/Jsdelivr-Video/2.png\" alt=\"\"></p>\n<p>现在访问是m3u8是不可以播放视频的(会自动下载对吧)<br><span style='color:red'>注：由于我的GitHub仓库被官方人员禁止了，导致失效</span><br><a href=\"https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4.m3u8\">https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4.m3u8</a><br>访问文件也是不行的(乱码对吧)<br><a href=\"https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4000.ts\">https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4000.ts</a></p>\n<h2 id=\"HLS技术\"><a href=\"#HLS技术\" class=\"headerlink\" title=\"HLS技术\"></a>HLS技术</h2><p>什么是HLS技术？</p>\n<p>HLS (HTTP Live Streaming)是Apple的动态码率自适应技术。主要用于PC和Apple终端的音视频服务。<br>包括一个m3u(8)的索引文件，TS媒体分片文件和key加密串文件。(摘抄自百度百科)</p>\n<p>CDN：<a href=\"https://cdn.jsdelivr.net/npm/hls.js\">https://cdn.jsdelivr.net/npm/hls.js</a></p>\n<h2 id=\"视频播放\"><a href=\"#视频播放\" class=\"headerlink\" title=\"视频播放\"></a>视频播放</h2><p>使用video标签播放视频</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>autoplay</td>\n<td>autoplay</td>\n<td>如果出现该属性，则视频在就绪后马上播放。</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>controls</td>\n<td>如果出现该属性，则向用户显示控件，比如播放按钮。</td>\n</tr>\n<tr>\n<td>height</td>\n<td>pixels</td>\n<td>设置视频播放器的高度。</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>loop</td>\n<td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td>\n</tr>\n<tr>\n<td>muted</td>\n<td>muted</td>\n<td>规定视频的音频输出应该被静音。</td>\n</tr>\n<tr>\n<td>poster</td>\n<td>URL</td>\n<td>规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。</td>\n</tr>\n<tr>\n<td>preload</td>\n<td>preload</td>\n<td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。<br> 如果使用 “autoplay”，则忽略该属性。</td>\n</tr>\n<tr>\n<td>src</td>\n<td>url</td>\n<td>要播放的视频的 URL。</td>\n</tr>\n<tr>\n<td>width</td>\n<td>pixels</td>\n<td>设置视频播放器的宽度。</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/hls.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;video&quot;</span> <span class=\"attr\">preload</span> <span class=\"attr\">muted</span> <span class=\"attr\">loop</span> <span class=\"attr\">autoplay</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 100%;width: 100%;object-fit: cover;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> video = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;video&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> videoSrc = <span class=\"string\">&#x27;https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4.m3u8&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (<span class=\"title class_\">Hls</span>.<span class=\"title function_\">isSupported</span>()) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> hls = <span class=\"keyword\">new</span> <span class=\"title class_\">Hls</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    hls.<span class=\"title function_\">loadSource</span>(videoSrc);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    hls.<span class=\"title function_\">attachMedia</span>(video);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    hls.<span class=\"title function_\">on</span>(<span class=\"title class_\">Hls</span>.<span class=\"property\">Events</span>.<span class=\"property\">MANIFEST_PARSED</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      video.<span class=\"title function_\">play</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><script src=\"https://cdn.jsdelivr.net/npm/hls.js\"></script>\n<video id=\"video\" preload muted loop autoplay style=\"height: 100%;width: 100%;object-fit: cover;\">\n</video>\n<script>\n  var video = document.getElementById('video');\n  var videoSrc = 'https://cdn.jsdelivr.net/gh/lete114/CDN2/video/4.m3u8';\n  if (Hls.isSupported()) {\n    var hls = new Hls();\n    hls.loadSource(videoSrc);\n    hls.attachMedia(video);\n    hls.on(Hls.Events.MANIFEST_PARSED, function() {\n      video.play();\n    });\n  }\n</script>\n\n",
            "tags": [
                "记录",
                "教程",
                "jsdelivr"
            ]
        }
    ]
}