<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Lete乐特 &#39;s Blog • Posts by &#34;记录&#34; tag</title>
        <link>https://blog.imlete.cn</link>
        <description>我相信我可以，但我一直在路上，所以我有无限的可能！！</description>
        <language>zh-CN</language>
        <pubDate>Sat, 18 Mar 2023 12:11:03 +0000</pubDate>
        <lastBuildDate>Sat, 18 Mar 2023 12:11:03 +0000</lastBuildDate>
        <category>CSS</category>
        <category>记录</category>
        <category>JavaScript</category>
        <category>Git</category>
        <category>教程</category>
        <category>HTML</category>
        <category>CDN</category>
        <category>Github</category>
        <category>Jsdeliver</category>
        <category>SEO</category>
        <category>Hexo</category>
        <category>Yilia</category>
        <category>Valine</category>
        <category>Live2d</category>
        <category>Config</category>
        <category>LeanCloud</category>
        <category>IDEA</category>
        <category>Maven</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>Thymeleaf</category>
        <category>java</category>
        <category>源码</category>
        <category>软件</category>
        <category>MyBatis</category>
        <category>SSM</category>
        <category>Gzip</category>
        <category>JQuery</category>
        <category>Node</category>
        <category>Cache</category>
        <category>Vue</category>
        <category>TypeScript</category>
        <category>Vercel</category>
        <category>HTTP</category>
        <category>Typecho</category>
        <category>Blog</category>
        <category>Webpack</category>
        <category>Windows</category>
        <category>Linux</category>
        <category>PhotoShop</category>
        <category>抠图</category>
        <category>VSCode</category>
        <category>jsdelivr</category>
        <category>C#</category>
        <category>Google Chrome</category>
        <category>谷歌插件</category>
        <category>Google-Chrome</category>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/Beautify-Windows-Terminal-PowerShell.html</guid>
            <title>美化 Windows 终端(Terminal + PowerShell)</title>
            <link>https://blog.imlete.cn/article/Beautify-Windows-Terminal-PowerShell.html</link>
            <category>记录</category>
            <category>Windows</category>
            <pubDate>Sat, 18 Mar 2023 12:11:03 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;废话不多说，这是我做的一个 Oh-My-Posh 终端主题，仓库地址: &lt;a href=&#34;https://github.com/Lete114/oh-my-posh-themes&#34;&gt;https://github.com/Lete114/oh-my-posh-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;效果如下:&lt;br&gt;&lt;img src=&#34;/img/Beautify-Windows-Terminal-PowerShell/lete114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Windows-Terminal&#34;&gt;&lt;a href=&#34;#Windows-Terminal&#34; class=&#34;headerlink&#34; title=&#34;Windows Terminal&#34;&gt;&lt;/a&gt;Windows Terminal&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;安装需要 Win10 2004（内部版本 19041）或更高版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Windows Terminal 是微软开源一个终端工具，主要功能包括多个选项卡、窗格、Unicode、和 UTF-8 字符支持，GPU 加速文本渲染引擎以及自定义主题、样式和配置&lt;/p&gt;
&lt;p&gt;总之比 cmd、powershell 那丑不拉几的窗口好使就对了&lt;/p&gt;
&lt;p&gt;可以通过微软商店直接安装，或者到开源仓库取下载安装都可以&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/terminal&#34;&gt;https://github.com/microsoft/terminal&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;Oh-My-Posh&#34;&gt;&lt;a href=&#34;#Oh-My-Posh&#34; class=&#34;headerlink&#34; title=&#34;Oh My Posh&#34;&gt;&lt;/a&gt;Oh My Posh&lt;/h2&gt;&lt;p&gt;Oh My Posh 类似于 Oh My zsh 的一个命令行提示工具，具体的得看官网描述 &lt;a href=&#34;https://ohmyposh.dev/docs/&#34;&gt;Oh My Posh Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装 Oh My Posh ，参考官网安装教程&lt;br&gt;&lt;a href=&#34;https://ohmyposh.dev/docs/installation/windows&#34;&gt;https://ohmyposh.dev/docs/installation/windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;winget&lt;/code&gt; 安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;winget install JanDeDobbeleer.OhMyPosh -s winget&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;建议使用 powershell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 Oh My Posh，如果你不找到你当前使用的是什么终端，你可以执行这条命令查看，具体详细请看官网 &lt;a href=&#34;https://ohmyposh.dev/docs/installation/prompt&#34;&gt;https://ohmyposh.dev/docs/installation/prompt&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;oh-my-posh get shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用记事本或 vscode 打开 powershell 的配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 记事本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;notepad &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# vscode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;当上述命令出现错误时，确保先创建配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;New-Item -Path &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt; -Type File -Force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;在文件中添加如下代码使用 Oh My Posh&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 注意这仅仅只是使用了 Oh My Posh，你可能会发现终端有乱码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 因为 Oh My Posh 使用了 Nerd Fonts 字体中的一些图标，如果你的电脑中没有 Nerd Fonts 字体就会出现乱码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 自带的主题就使用了 Nerd Fonts 的图标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oh-my-posh init pwsh | Invoke-Expression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 自定义主题，使用 Oh My Posh 自带的一些开箱即用主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这里是 Oh My Posh 自带的主题 https://ohmyposh.dev/docs/themes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oh-my-posh init pwsh --config &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;variable&#34;&gt;$env&lt;/span&gt;:POSH_THEMES_PATH/robbyrussell.omp.json&amp;quot;&lt;/span&gt; | Invoke-Expression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 下载我做的主题，我主题不需要安装 Nerd Fonts 字体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# https://raw.githubusercontent.com/Lete114/oh-my-posh-themes/main/lete114/lete114.minimal.omp.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oh-my-posh init pwsh --config &lt;span class=&#34;string&#34;&gt;&amp;quot;你下载的路径/lete114.minimal.omp.yaml&amp;quot;&lt;/span&gt; | Invoke-Expression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 之后执行以下命令加载配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;. &lt;span class=&#34;variable&#34;&gt;$profile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;安装字体&#34;&gt;&lt;a href=&#34;#安装字体&#34; class=&#34;headerlink&#34; title=&#34;安装字体&#34;&gt;&lt;/a&gt;安装字体&lt;/h3&gt;&lt;p&gt;如果你使用的主题是含 &lt;code&gt;minimal&lt;/code&gt; 的就不需要安装&lt;/p&gt;
&lt;p&gt;参考官方: &lt;a href=&#34;https://ohmyposh.dev/docs/installation/fonts#configuration&#34;&gt;https://ohmyposh.dev/docs/installation/fonts#configuration&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;oh-my-posh font install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 也可以直接手动下载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 下载完成后解压，全选右键点击安装即可自动安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;以下操作是根据 Oh My Posh 官网教程搬过来的，但不知道为什么我的字体依然显示乱码&lt;br&gt;有知道是啥问题的小伙伴可以在评论区回复我&lt;br&gt;当然，设置字体也可以在 Windows Terminal 的设置中设置，不必打开配置文件 (但同样我也不知道为什么我的 Windows Terminal 里面没有设置字体的选项，就挺离谱 😅)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装完成后打开 Windows Terminal 然后按 &lt;code&gt;Ctrl+Shift+,&lt;/code&gt;(逗号) 来打开 settings.json 配置文件&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;profiles-&amp;gt;defaults&lt;/code&gt; 设置 &lt;code&gt;font-&amp;gt;face&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;profiles&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;defaults&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;quot;font&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;quot;face&amp;quot;: &amp;quot;MesloLGM NF&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;posh-git&#34;&gt;&lt;a href=&#34;#posh-git&#34; class=&#34;headerlink&#34; title=&#34;posh-git&#34;&gt;&lt;/a&gt;posh-git&lt;/h2&gt;&lt;p&gt;提供完整的 git 命令行提示以及自动补全&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dahlbyk/posh-git&#34;&gt;https://github.com/dahlbyk/posh-git&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装 posh-git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Install-Module posh-git -Scope CurrentUser -Force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后打开 PowerShell 配置文件，添加一行导入命令 &lt;code&gt;Import-Module posh-git&lt;/code&gt; 即可&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 记事本打开配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;notepad &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 或使用 vscode 打开配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;PSReadLine&#34;&gt;&lt;a href=&#34;#PSReadLine&#34; class=&#34;headerlink&#34; title=&#34;PSReadLine&#34;&gt;&lt;/a&gt;PSReadLine&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;PowerShell 官方的插件，可以放心使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;提供输入提醒，类似于 zsh 中有个插件，具体叫什么名字我忘了，就是当你输入一个命令输入到一半后，控制台就会有灰色命令提示，之后按下方向键的右键（-&amp;gt;）键就能不全的根据&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/PowerShell/PSReadLine&#34;&gt;https://github.com/PowerShell/PSReadLine&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 以下是搬运的官方的教程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Install-Module -Name PowerShellGet -Force&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Install-Module PSReadLine -AllowPrerelease -Force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;之后&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 记事本打开配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;notepad &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 或使用 vscode 打开配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code &lt;span class=&#34;variable&#34;&gt;$PROFILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# PSReadLine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Import-Module PSReadLine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Enable Prediction History&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Set-PSReadLineOption -PredictionSource History&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Advanced Autocompletion for arrow keys&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Set-PSReadlineKeyHandler -Key UpArrow -Function HistorySearchBackward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Set-PSReadlineKeyHandler -Key DownArrow -Function HistorySearchForward&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/nonuse-es6+-implements-call-apply-bind.html</guid>
            <title>不使用 ES6+ 实现 call apply bind 方法</title>
            <link>https://blog.imlete.cn/article/nonuse-es6+-implements-call-apply-bind.html</link>
            <category>记录</category>
            <category>JavaScript</category>
            <pubDate>Fri, 04 Nov 2022 15:24:31 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;使用 ES6+ 实现这三个方法其实非常简单，本文就来挑战一下，如果不适用 ES6+ 的情况下如何实现这三个方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;难点: 不能使用扩展运算符(…)该如何接收参数和传入参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;至于这三个方法有什么区别可以阅读我之前的这篇文章 &lt;a href=&#34;/article/call-apply-bind-distinction.html&#34;&gt;call()-apply()-bind()方法有什么不同？&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;apply&#34;&gt;&lt;a href=&#34;#apply&#34; class=&#34;headerlink&#34; title=&#34;apply&#34;&gt;&lt;/a&gt;apply&lt;/h2&gt;&lt;p&gt;就不多说废话了，直接看代码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Function&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;myApply&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;_this, args&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _this = _this || &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _this[&lt;span class=&#34;string&#34;&gt;&amp;#x27;#function#&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; _this[&lt;span class=&#34;string&#34;&gt;&amp;#x27;#function#&amp;#x27;&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; params = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 当 JSON.stringify 把一个数组解析成字符串是会多套一层 ‘[]’ ，所以需要裁切掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      params = params.&lt;span class=&#34;title function_&#34;&gt;slice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, params.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 由于 Function 无法访问上级作用域，由于上层以及裁掉了首尾部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 所以得到 _this[&amp;quot;#function#&amp;quot;](1,2) 这样就能实现扩展运算符(...)的操作了，关于 new Function 请自行查阅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Function&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_this&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;return _this[&amp;quot;#function#&amp;quot;](&amp;#x27;&lt;/span&gt; + params + &lt;span class=&#34;string&#34;&gt;&amp;#x27;)&amp;#x27;&lt;/span&gt;)(_this)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// ------ 上面这坨你也可以改为 eval() ------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; params = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 注意，这里的 i 初始值是 1 主要目的是为了去除第一个参数(也就是 _this)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        params.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;arguments[&amp;#x27;&lt;/span&gt; + i + &lt;span class=&#34;string&#34;&gt;&amp;#x27;]&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 这里解释一下，当引用类型与字符串拼接的时候会隐式调用 toString() ，数组调用 toString() 会返回如下结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// _this[&amp;quot;#function#&amp;quot;](arguments[1],arguments[2],arguments[3])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// eval 执行后可以访问上级作用域的变量，这里就可以实现扩展运算符(...)的操作了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_this[&amp;quot;#function#&amp;quot;](&amp;#x27;&lt;/span&gt; + params + &lt;span class=&#34;string&#34;&gt;&amp;#x27;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;delete&lt;/span&gt; _this[&lt;span class=&#34;string&#34;&gt;&amp;#x27;#function#&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;call&#34;&gt;&lt;a href=&#34;#call&#34; class=&#34;headerlink&#34; title=&#34;call&#34;&gt;&lt;/a&gt;call&lt;/h2&gt;&lt;p&gt;由于前面以及实现了 &lt;code&gt;myApply&lt;/code&gt; 方法，再 &lt;code&gt;myCall&lt;/code&gt; 即可直接调用，如果要完整写一个 &lt;code&gt;myCall&lt;/code&gt; 也只是增加代码冗余而已&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Function&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;myCall&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;_this&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _this = _this || &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; params = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 注意，这里的 i 初始值是 1 主要目的是为了去除第一个参数(也就是 _this)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    params.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;myApply&lt;/span&gt;(_this, params)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;bind&#34;&gt;&lt;a href=&#34;#bind&#34; class=&#34;headerlink&#34; title=&#34;bind&#34;&gt;&lt;/a&gt;bind&lt;/h2&gt;&lt;p&gt;如上，可以继续复用已经封装好的&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Function&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;myBind&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;_this&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _this = _this || &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; self = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; params = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 注意，这里的 i 初始值是 1 主要目的是为了去除第一个参数(也就是 _this)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    params.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 注意这里的 i 初始值是 0 ,因为它不需要移除 _this ，可能这有点乱，希望读者多多思考&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      params.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;arguments&lt;/span&gt;[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; self.&lt;span class=&#34;title function_&#34;&gt;myApply&lt;/span&gt;(_this, params)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;以上就是本文的全部内容，可能会存在一些小瑕疵，希望各位读者留言评论或优化&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/Windows-files-tree.html</guid>
            <title>Windows的tree命令生成文件结构树</title>
            <link>https://blog.imlete.cn/article/Windows-files-tree.html</link>
            <category>记录</category>
            <pubDate>Sun, 03 Apr 2022 18:32:29 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;你可能在很多人的博客文章内或是一些文档内见到清晰的文件结构说明&lt;/p&gt;
&lt;p&gt;那他们是怎么做的呢？不会是一个文件一个文件的拼接手写吧？不会吧？&lt;/p&gt;
&lt;p&gt;各大操作系统都有&lt;code&gt;tree&lt;/code&gt;这个命令，本文仅描述&lt;strong&gt;Windows&lt;/strong&gt;系统&lt;/p&gt;
&lt;p&gt;先看看&lt;code&gt;tree&lt;/code&gt;命令有些说明参数说明吧，输入&lt;code&gt;tree /?&lt;/code&gt;也可以使用&lt;code&gt;help tree&lt;/code&gt;参数说明&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows系统自带的功能实在是太少了，例如我需要生成指定文件的在该结构总的位置，则系统自带的是的&lt;code&gt;tree&lt;/code&gt;是无法办到的，这里推荐使用&lt;a href=&#34;https://www.npmjs.com/package/tree-node-cli&#34;&gt;tree-node-cli&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight cmd&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;L:\&lt;span class=&#34;title&#34;&gt;Windows&lt;/span&gt;\&lt;span class=&#34;title&#34;&gt;Desktop&lt;/span&gt;\新建文件夹&amp;gt;&lt;span class=&#34;title&#34;&gt;tree&lt;/span&gt; /?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;以图形显示驱动器或路径的文件夹结构。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;title&#34;&gt;TREE&lt;/span&gt; [&lt;span class=&#34;title&#34;&gt;drive&lt;/span&gt;:][&lt;span class=&#34;title&#34;&gt;path&lt;/span&gt;] [/&lt;span class=&#34;title&#34;&gt;F&lt;/span&gt;] [/&lt;span class=&#34;title&#34;&gt;A&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;   /&lt;span class=&#34;title&#34;&gt;F&lt;/span&gt;   显示每个文件夹中文件的名称。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;   /&lt;span class=&#34;title&#34;&gt;A&lt;/span&gt;   使用 &lt;span class=&#34;title&#34;&gt;ASCII&lt;/span&gt; 字符，而不使用扩展字符。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;/F /A 都可以使用小写，对大小写不敏感(博主设备: win11)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文以&lt;code&gt;.git&lt;/code&gt;文件文件夹结构举例&lt;/p&gt;
&lt;p&gt;本文的目录结构&lt;/p&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;L:.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;└─test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    └─.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ├─hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ├─info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ├─objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        │  ├─info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        │  └─pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        └─refs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ├─heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            └─tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;tree /F &amp;gt; tree.txt&lt;/code&gt;: 生成的文件目录树形结构写入到 tree.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用&lt;strong&gt;特殊字符&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight cmd&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;tree&lt;/span&gt; test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ├─hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ├─info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ├─objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  ├─info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  └─pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  └─refs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     ├─heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     └─tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight cmd&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;tree&lt;/span&gt; test /F&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  description&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ├─hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      applypatch-msg.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      commit-msg.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      fsmonitor-watchman.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      post-update.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      pre-applypatch.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      pre-commit.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      pre-merge-commit.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      pre-push.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      pre-rebase.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      pre-receive.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      prepare-commit-msg.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      push-to-checkout.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      update.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ├─info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │      exclude&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ├─objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  ├─info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  │  └─pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  └─refs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ├─heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      └─tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用 &lt;strong&gt;ASCII 字符&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight cmd&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;tree&lt;/span&gt; test /A&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  +---hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  +---info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  +---objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   +---info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   \---pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  \---refs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      +---heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      \---tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight cmd&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;tree&lt;/span&gt; test /A /F&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   description&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  +---hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       applypatch-msg.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       commit-msg.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       fsmonitor-watchman.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       post-update.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       pre-applypatch.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       pre-commit.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       pre-merge-commit.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       pre-push.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       pre-rebase.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       pre-receive.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       prepare-commit-msg.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       push-to-checkout.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       update.sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  +---info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |       exclude&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  +---objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   +---info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  |   \---pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  \---refs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      +---heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      \---tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/git-tag-release-distinction.html</guid>
            <title>git中tag与release的创建以及两者的区别</title>
            <link>https://blog.imlete.cn/article/git-tag-release-distinction.html</link>
            <category>记录</category>
            <category>Git</category>
            <pubDate>Sun, 03 Apr 2022 15:54:38 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文未经过&lt;strong&gt;原文作者转载许可&lt;/strong&gt;，全由博主一人擅自抄录到本博客，博主只是觉得原文作者写的很好，所以将其收录到自己的博客内，以便博主本人日后对该知识有所遗忘时，能在自己的博客内自行查阅，再此感谢&lt;strong&gt;原文作者&lt;/strong&gt;写的这篇好文。如有侵权，请联系删除&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文可能于原文有所不同，不过版权依然归&lt;strong&gt;原文作者&lt;/strong&gt;所有&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址: &lt;a href=&#34;https://www.jianshu.com/p/79ecf4fe5079&#34;&gt;https://www.jianshu.com/p/79ecf4fe5079&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;定义&#34;&gt;&lt;a href=&#34;#定义&#34; class=&#34;headerlink&#34; title=&#34;定义&#34;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;标签（tag）是特定提交（commit)一个指针，也就是每个 tag 对应一个特定的 commit。&lt;/p&gt;
&lt;p&gt;Release 是具有 changelogs 和二进制文件的一级对象，它可以代表超出 Git 架构本身的一个特定时间点之前的所有项目历史。也就是通过 release，不但能够通过源码体现出项目历史，还能通过已经编译好的二进制文件来进一步描述此时的项目状态。“超出 Git 架构本身“的意思则在于，git 本身只能记录项目修改，本质上不适合将编译好的项目二进制文件记录下来。而通过 release 则把项目二进制文件保存了下来，方便用户下载，也方便查找特定版本的二进制文件。&lt;/p&gt;
&lt;p&gt;以下是&lt;a href=&#34;https://github.com/blog/1547-release-your-software&#34;&gt;Github official announcement&lt;/a&gt;所定义原文：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eleases are first-class objects with changelogs and binary assets that present a full project history beyond Git artifacts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;创建方法&#34;&gt;&lt;a href=&#34;#创建方法&#34; class=&#34;headerlink&#34; title=&#34;创建方法&#34;&gt;&lt;/a&gt;创建方法&lt;/h2&gt;&lt;p&gt;Release 分为两种：lightweight and annotated.&lt;/p&gt;
&lt;p&gt;创建 lightweight 类型的 tag：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag v1.4-lw&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;创建 annotated 类型的 tag：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag -a v1.4 -m &lt;span class=&#34;string&#34;&gt;&amp;quot;my version 1.4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过 tag 可以返回到项目的特定状态下，所以可以将 tag 看作是在大量 commit 中设定的书签。&lt;/p&gt;
&lt;p&gt;创建 release，则需要通过源码托管商的网页操作界面来进行，一般会要求填写 tag 名、分支以及相应的发布说明，还可上传编译好的程序、打包好的文件等。&lt;/p&gt;
&lt;h2 id=&#34;区别&#34;&gt;&lt;a href=&#34;#区别&#34; class=&#34;headerlink&#34; title=&#34;区别&#34;&gt;&lt;/a&gt;区别&lt;/h2&gt;&lt;p&gt;标签是 git 中的概念，而 release 则是 Github、码云等源码托管商所提供的更高层的概念。也就是说 git 本身是没有 release 这个概念的，只有 tag。&lt;/p&gt;
&lt;p&gt;两者之间的关系则是，release 基于 tag，为 tag 添加更丰富的信息，一般是编译好的文件。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;Release 是源码托管商对 git 的 tag 功能的增强。通过 git 提供的 tag 功能，我们可以给项目进行版本标识，以识别特定的版本，如&lt;code&gt;v0.1.0&lt;/code&gt;、&lt;code&gt;v1.0.0&lt;/code&gt;等。而通过源码托管商提供的 release 功能，在 tag 的基础上我们可以添加编译好的二进制文件等，如&lt;code&gt;.deb&lt;/code&gt;、&lt;code&gt;.exe&lt;/code&gt;等给特定的版本提供更多的信息，方便用户，也方便后期查找特定版本的程序。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/Vercel-Use-HTTP-Cache.html</guid>
            <title>Vercel 使用 HTTP 缓存</title>
            <link>https://blog.imlete.cn/article/Vercel-Use-HTTP-Cache.html</link>
            <category>记录</category>
            <category>Cache</category>
            <category>Vercel</category>
            <category>HTTP</category>
            <pubDate>Wed, 23 Mar 2022 21:24:26 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;近期也是闲得无聊，就翻一翻&lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;文档，于是我发现，它居然能自定义设置响应头(静态文件部署居然可以)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在我个人的角度，我以为只有使用 ServerLess 才能用 http 的响应对象指定响应头信息，没想到 Vercel 居然可以直接通过&lt;code&gt;vercel.json&lt;/code&gt;文件指定配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那我部署的博客(或其它静态站点)岂不是可以启动 http 缓存了？&lt;/p&gt;
&lt;p&gt;Vercel 文档: &lt;a href=&#34;https://vercel.com/docs/project-configuration#project-configuration/headers&#34;&gt;https://vercel.com/docs/project-configuration#project-configuration/headers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是本站的使用的&lt;code&gt;vercel.json&lt;/code&gt;文件信息(缓存开启了 1 天)&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;/sw.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Cache-Control&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;public, max-age=0, must-revalidate&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;(.*)&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Cache-Control&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;public, s-maxage=86400, max-age=86400&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/win11-port-occupy.html</guid>
            <title>更新win11系统后端口被占用</title>
            <link>https://blog.imlete.cn/article/win11-port-occupy.html</link>
            <category>记录</category>
            <pubDate>Fri, 18 Mar 2022 20:32:55 +0000</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;虽然本文的确是有点短，但这仅仅是博主记录一些不常用的功能或者是方便以后查阅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更新到 win11 后偶尔会遇到端口被占用的问题，例如 hexo 启动的 4000 端口有时候也会被占用，这么都关不掉，用 kill 命令也关不掉，具体参考:&lt;a href=&#34;https://blog.csdn.net/qq892601059/article/details/120898283&#34;&gt;记一次 Clash 端口为 0 的问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这种现象出现的记录并不是很频繁，阶段性的产生，据说是开启了&lt;code&gt;hyper-V&lt;/code&gt;后产生的，具体的博主也不清楚。&lt;/p&gt;
&lt;p&gt;执行如下命令即可(以管理员身份允许 CMD)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;net stop winnat &amp;amp;&amp;amp; net start winnat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/Windows-Linux-SubSystem.html</guid>
            <title>Windows安装Linux子系统</title>
            <link>https://blog.imlete.cn/article/Windows-Linux-SubSystem.html</link>
            <category>记录</category>
            <category>Windows</category>
            <category>Linux</category>
            <pubDate>Sat, 13 Nov 2021 09:40:50 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;废话&#34;&gt;&lt;a href=&#34;#废话&#34; class=&#34;headerlink&#34; title=&#34;废话&#34;&gt;&lt;/a&gt;废话&lt;/h2&gt;&lt;p&gt;在写了项目后，需要放到服务器上去运行测试，但仅仅是为了测试也没不要去掏钱买个服务器来进行测试(我觉得挺贵的)&lt;br&gt;本地电脑开个 VM 虚拟机？太吃配置了，而且启动速度还贼慢&lt;br&gt;直到最近我才知道 Windows 可以看起 Linux 之系统，于是就尝试了一下，于是我就写了这篇文章记录一下&lt;br&gt;官方文档: &lt;a href=&#34;https://docs.microsoft.com/zh-cn/windows/wsl/install-on-server&#34;&gt;https://docs.microsoft.com/zh-cn/windows/wsl/install-on-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;适用于 Linux 的 Windows 子系统可供在 Windows Server 2019（版本 1709）和更高版本上安装。&lt;br&gt;本文记录我是如何在 Windows 上启用 WSL 的步骤。并安装 Ubuntu 子系统的&lt;/p&gt;
&lt;p&gt;必须启用&lt;code&gt;适用于 Linux 的 Windows 子系统&lt;/code&gt;可选功能并重启，然后才能在 Windows 上运行 Linux 发行版。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a href=&#34;#正文&#34; class=&#34;headerlink&#34; title=&#34;正文&#34;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;启动&lt;code&gt;适用于 Linux 的 Windows 子系统&lt;/code&gt;服务&lt;br&gt;以管理员身份打开 PowerShell 并运行：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意是以管理员身份运行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Enable-WindowsOptionalFeature&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;-Online&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;-FeatureName&lt;/span&gt; Microsoft&lt;span class=&#34;literal&#34;&gt;-Windows-Subsystem-Linux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上方是以命令的方式开启&lt;code&gt;适用于 Linux 的 Windows 子系统&lt;/code&gt;，如果不行的话你可以手动开启&lt;/p&gt;
&lt;p&gt;按 win 键直接输入(或者打开设置搜索也一样)&lt;code&gt;启用或关闭 Windows 功能&lt;/code&gt;并打开找到&lt;code&gt;适用于 Linux 的 Windows 子系统&lt;/code&gt;选项勾选后点击&lt;code&gt;确定&lt;/code&gt;稍等一会儿会弹出以可框，会提示你重启电脑&lt;/p&gt;
&lt;h3 id=&#34;安装-Linux-子系统&#34;&gt;&lt;a href=&#34;#安装-Linux-子系统&#34; class=&#34;headerlink&#34; title=&#34;安装 Linux 子系统&#34;&gt;&lt;/a&gt;安装 Linux 子系统&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;如果按安装过程中遇到任何问题，可多重试两边&lt;br&gt;如果依旧报错失败，可以到系统设置中(设置中开发者选项的未知可能在不同版本中出现的位置不同)&lt;code&gt;隐私和安全性&lt;/code&gt;—&amp;gt;&lt;code&gt;开发者选项&lt;/code&gt;开启开启开发者，随后重新安装&lt;br&gt;如果还不行，则重启电脑后再试试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;自动安装直接到 &lt;code&gt;Microsoft Store&lt;/code&gt; 搜索&lt;code&gt;Ubuntu&lt;/code&gt; 进行下载即可(版本就随便你啦)&lt;br&gt;不过自动安装会直接安装到 C 盘，用的时间长了会堆积很多文件，导致 C 盘爆红，所以我更建议手动安装(不难)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里只描述如何手动安装 Ubuntu 子系统，好处就是能自定义安装路径，不会占用 C 盘空间&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;博主下载的是&lt;code&gt;Ubuntu 20.04&lt;/code&gt;发行版&lt;br&gt;系统下载地址如下: &lt;a href=&#34;https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#downloading-distributions&#34;&gt;官方发行版下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载下来后，(剪切或复制随便你)复制到你想要安装的路径下，修改后缀名为&lt;code&gt;.zip&lt;/code&gt;解压，运行&lt;code&gt;ubuntu2004.exe&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;进入后会让你输入用户名和密码，自己写一个就行了&lt;/p&gt;
&lt;p&gt;随后就是修改 root 的密码，输入&lt;code&gt;su root&lt;/code&gt;或者是&lt;code&gt;sudo pass&lt;/code&gt;跟着提示输入即可&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;至此，你就有了一个本地的 Linux 测试环境，因为这个子系统是和主系统联通的，用到的 ip 也是和主系统一样的&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;ls&lt;/code&gt; 可以看到有个&lt;code&gt;mnt&lt;/code&gt;目录，进入后就可以看到主系统的盘符，他们是互通的&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/async-await-error-handling.html</guid>
            <title>如何优雅的处理async/await错误信息</title>
            <link>https://blog.imlete.cn/article/async-await-error-handling.html</link>
            <category>记录</category>
            <category>JavaScript</category>
            <pubDate>Fri, 12 Nov 2021 16:42:37 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;废话&#34;&gt;&lt;a href=&#34;#废话&#34; class=&#34;headerlink&#34; title=&#34;废话&#34;&gt;&lt;/a&gt;废话&lt;/h2&gt;&lt;p&gt;在实际开发中，用到了一些异步函数或是请求。你可能会写&lt;code&gt;.then()&lt;/code&gt;和&lt;code&gt;.catch()&lt;/code&gt;来处理异步的成功与失败&lt;br&gt;那么如果这个&lt;code&gt;.then()&lt;/code&gt;里又有一个请求，那么时不时又得写&lt;code&gt;.then()&lt;/code&gt;和&lt;code&gt;.catch()&lt;/code&gt;，那么很有可能&lt;code&gt;.catch()&lt;/code&gt;里也有呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里就不多说什么回调地狱的问题了&lt;br&gt;你可能就会用&lt;code&gt;async&lt;/code&gt;和&lt;code&gt;await&lt;/code&gt;来处理异步请求，但这也就会随着产生一个问题，那就是&lt;code&gt;await&lt;/code&gt;它无法捕获异步请求的错误啊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这时你又想到，那我包一层&lt;code&gt;try...catch&lt;/code&gt;不就好了吗？&lt;br&gt;但是这仅仅只能处理当前这个方法的错误，如果这个方法里又多个请求或者说是其他同步代码产生的问题，错误也只能定位到这个方法。&lt;br&gt;&lt;code&gt;try...catch&lt;/code&gt;对代码的可读性不是很友好(个人觉得)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你觉得上面所说的，你觉得很 ok，就是要用上面说的&lt;code&gt;try...catch&lt;/code&gt;还是&lt;code&gt;.then()&lt;/code&gt;和&lt;code&gt;.catch()&lt;/code&gt;，就随便你&lt;br&gt;萝卜青菜，各有所爱(你想用啥就用啥)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a href=&#34;#正文&#34; class=&#34;headerlink&#34; title=&#34;正文&#34;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;现在有如下代码:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Success&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Run Success&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;UnSuccess&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;reject&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Error&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Run Error&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; result = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Success&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;result:&amp;quot;&lt;/span&gt;, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;then-catch&#34;&gt;&lt;a href=&#34;#then-catch&#34; class=&#34;headerlink&#34; title=&#34;then-catch&#34;&gt;&lt;/a&gt;then-catch&lt;/h2&gt;&lt;p&gt;用&lt;code&gt;.then()&lt;/code&gt;和&lt;code&gt;.catch()&lt;/code&gt;来处理&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;UnSuccess&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;result:&amp;quot;&lt;/span&gt;, res);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;发生了错误！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;try-catch&#34;&gt;&lt;a href=&#34;#try-catch&#34; class=&#34;headerlink&#34; title=&#34;try-catch&#34;&gt;&lt;/a&gt;try-catch&lt;/h2&gt;&lt;p&gt;用&lt;code&gt;try...catch&lt;/code&gt;来处理&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; result = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;UnSuccess&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;result:&amp;quot;&lt;/span&gt;, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;发生了错误！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;then-catch-结构赋值&#34;&gt;&lt;a href=&#34;#then-catch-结构赋值&#34; class=&#34;headerlink&#34; title=&#34;then-catch 结构赋值&#34;&gt;&lt;/a&gt;then-catch 结构赋值&lt;/h2&gt;&lt;p&gt;&lt;code&gt;.then()&lt;/code&gt;和&lt;code&gt;.catch()&lt;/code&gt;联合&lt;code&gt;结构赋值&lt;/code&gt;来处理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这种方式仅仅是简化了&lt;code&gt;.then()&lt;/code&gt;和&lt;code&gt;.catch()&lt;/code&gt;方式而已&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; [err, result] = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;UnSuccess&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;result&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, result])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [err, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;发生了错误！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;result:&amp;quot;&lt;/span&gt;, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;封装-then-catch-结构赋值&#34;&gt;&lt;a href=&#34;#封装-then-catch-结构赋值&#34; class=&#34;headerlink&#34; title=&#34;封装 then-catch 结构赋值&#34;&gt;&lt;/a&gt;封装 then-catch 结构赋值&lt;/h2&gt;&lt;p&gt;简单的封装以下就可用在很多地方进行复用了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根前面的代码对比时不时好了很多？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * Promise函数错误处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;Function&lt;/span&gt;&amp;#125; asyncFn 这是一个Promise函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@returns&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;Array&lt;/span&gt;&amp;#125; [err,result]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;AsyncHandling&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;asyncFn&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;asyncFn&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;result&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, result])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [err, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; [err, result] = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AsyncHandling&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;UnSuccess&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;发生了错误！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;result:&amp;quot;&lt;/span&gt;, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;不管你用什么方式都可用，看你喜欢什么风格的编码方式&lt;br&gt;此篇文章只是提供更多的方式来解决实际开发中的问题&lt;br&gt;如果你有更好的方式欢迎留言评论&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/Get-Property.html</guid>
            <title>JavaScript动态获取对象二级(多级)属性(值)的几种方法</title>
            <link>https://blog.imlete.cn/article/Get-Property.html</link>
            <category>记录</category>
            <category>JavaScript</category>
            <pubDate>Sun, 07 Nov 2021 20:01:29 +0000</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;推荐最后一种自定义函数方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在一些特殊情况下，对象是动态的，它可用是一级、二级、多级对象，这是不规整的&lt;br&gt;那么如何获取这种动态属性的对象属性值呢？&lt;/p&gt;
&lt;p&gt;例如有如下对象&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;lisi&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;age&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;test-age&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;hobby&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;&amp;quot;写代码&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;&amp;quot;打篮球&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title class_&#34;&gt;Games&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;quot;英雄联盟&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;古墓丽影&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;神秘海域&amp;quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; key1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;lisi&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; key2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; key3 = &lt;span class=&#34;string&#34;&gt;&amp;quot;lisi.age&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 以下输出全为 undefined ; 因为 obj 内压根就没有key1~key3这个3属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj.&lt;span class=&#34;property&#34;&gt;key1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj.&lt;span class=&#34;property&#34;&gt;key2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj.&lt;span class=&#34;property&#34;&gt;key3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 1. 静态获取(一般正常方式) 不过这种方式有一定缺陷，例如无法获取 test-age&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj.&lt;span class=&#34;property&#34;&gt;lisi&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;age&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// console.log(obj.lisi.test-age); // 语法报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 2. 动态获取; 可解决上方无法获取 test-age的问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj.&lt;span class=&#34;property&#34;&gt;lisi&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;test-age&amp;quot;&lt;/span&gt;]); &lt;span class=&#34;comment&#34;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj[key1].&lt;span class=&#34;property&#34;&gt;age&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj[key1][key2]); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 为什么会是undefined？ 因为obj内没有 lisi.age (lisi.age被视为一个key，即test-age相同)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(obj[key3]); &lt;span class=&#34;comment&#34;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 使用eval函数动态获取(既然是动态获取test-age也是没问题的)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`obj.&lt;span class=&#34;subst&#34;&gt;$&amp;#123;key1&amp;#125;&lt;/span&gt;.age`&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`obj.&lt;span class=&#34;subst&#34;&gt;$&amp;#123;key1&amp;#125;&lt;/span&gt;.&lt;span class=&#34;subst&#34;&gt;$&amp;#123;key2&amp;#125;&lt;/span&gt;`&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;obj.&amp;quot;&lt;/span&gt; + key3)); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 使用 Function 动态获取 (此方法在浏览器控制台可用，但是放到nodejs里就不行了，目前我还不知道是什么情况)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// console.log(new Function(&amp;quot;return &amp;quot; + (&amp;quot;obj.&amp;quot; + key1))());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 自定义函数(推荐)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;GetProperty&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;obj, str&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  str = str.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\[(\w+)\]/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;.$1&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 处理数组下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; arr = str.&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    obj = obj[arr[i]] || &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;GetProperty&lt;/span&gt;(obj, key3)); &lt;span class=&#34;comment&#34;&gt;// 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;GetProperty&lt;/span&gt;(obj, &lt;span class=&#34;string&#34;&gt;&amp;quot;lisi.test-age&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;GetProperty&lt;/span&gt;(obj, &lt;span class=&#34;string&#34;&gt;&amp;quot;lisi.hobby[2].Games[1]&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// 古墓丽影&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.imlete.cn/article/FreeMove.html</guid>
            <title>C盘无损移动文件</title>
            <link>https://blog.imlete.cn/article/FreeMove.html</link>
            <category>记录</category>
            <pubDate>Sat, 06 Nov 2021 15:44:32 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;在一些特殊的情况下，某些软件在安装的过程中并没有给你指明安装路径或是按钮设计的很隐秘，又或者说是你不注意就点击下一步下一步就安装上了。(一般重新安装即可解决)&lt;/p&gt;
&lt;p&gt;甚至是有些软件是你用了很久的，导致这种文件堆积到C盘，导致越用越多，时不时C盘就爆红，还得定期清理，太麻烦了&lt;/p&gt;
&lt;p&gt;那有什么办法可用解决这个问题吗？答案是有的&lt;/p&gt;
&lt;p&gt;有些人可能知道&lt;a href=&#34;https://github.com/imDema/FreeMove&#34;&gt;FreeMove&lt;/a&gt;这款开源软件，这是一个很老的项目了，并且作者已经很久没有更新了，但用用来简单的以用一些文件、文件夹、软件安装路径也是没问题的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我也用过，但对于我来说，目前也不是太大作用，也不是实时使用的软件，可能一年两年才会用一次，然后就不知道丢到哪个文件夹里吃灰去了，在想起来要用是，找起来也是比较耗时(或者去gtihub下载一个)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在就不用这款软件了，直接使用一行命令即可实现，也不难记&lt;code&gt;mklink&lt;/code&gt;命令&lt;/p&gt;
&lt;p&gt;打开命令行输入&lt;code&gt;mklink&lt;/code&gt;命令即可查看详细的内容介绍&lt;br&gt;&lt;img src=&#34;/img/FreeMove/1.png&#34; alt=&#34;mklink command&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里我们会用到&lt;code&gt;mklink /d&lt;/code&gt;这个命令进行对文件的链接 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5#Windows%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&#34;&gt;详细内容&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;假设我现在需要将&lt;code&gt;G:\Desktop\test1&lt;/code&gt;链接到&lt;code&gt;G:\Desktop\test2&lt;/code&gt;，之后我打开&lt;code&gt;G:\Desktop\test1&lt;/code&gt;这个文件夹时就会链接到&lt;code&gt;G:\Desktop\test2&lt;/code&gt;(实则是打开了test2文件夹，相当于快捷方式)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我为什么用双引号跨起来呢？&lt;br&gt;为了保证命令行能够识别出完整的路径，所有需要括起来(一些特殊情况下有些文件路径是存在空格等一些特殊字符的)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在执行命令之前，你需要将&lt;code&gt;原文件夹&lt;/code&gt;剪切到&lt;code&gt;目标路径&lt;/code&gt;后再执行目录，否则会提示文件已存在，可参考如下图所示&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# mklink /d 原路径 目标路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mklink /d &lt;span class=&#34;string&#34;&gt;&amp;quot;G:\Desktop\test1&amp;quot;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;G:\Desktop\test2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/img/FreeMove/2.png&#34; alt=&#34;mklink free move command&#34;&gt;&lt;/p&gt;
&lt;p&gt;自此就已经将文件移动好了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;绝对不能用来移动系统文件，否则后果自负&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
    </channel>
</rss>
