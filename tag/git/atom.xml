<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.imlete.cn</id>
    <title>Lete乐特 &#39;s Blog • Posts by &#34;git&#34; tag</title>
    <link href="https://blog.imlete.cn" />
    <updated>2022-04-12T16:57:17.000Z</updated>
    <category term="CSS" />
    <category term="记录" />
    <category term="JavaScript" />
    <category term="Git" />
    <category term="教程" />
    <category term="HTML" />
    <category term="CDN" />
    <category term="Github" />
    <category term="Jsdeliver" />
    <category term="SEO" />
    <category term="Hexo" />
    <category term="Yilia" />
    <category term="Valine" />
    <category term="Live2d" />
    <category term="Config" />
    <category term="LeanCloud" />
    <category term="IDEA" />
    <category term="Maven" />
    <category term="Java" />
    <category term="SpringBoot" />
    <category term="Thymeleaf" />
    <category term="java" />
    <category term="源码" />
    <category term="软件" />
    <category term="MyBatis" />
    <category term="SSM" />
    <category term="Gzip" />
    <category term="JQuery" />
    <category term="Node" />
    <category term="Cache" />
    <category term="Vue" />
    <category term="TypeScript" />
    <category term="Vercel" />
    <category term="HTTP" />
    <category term="Typecho" />
    <category term="Blog" />
    <category term="Webpack" />
    <category term="Windows" />
    <category term="Linux" />
    <category term="PhotoShop" />
    <category term="抠图" />
    <category term="VSCode" />
    <category term="jsdelivr" />
    <category term="C#" />
    <category term="Google Chrome" />
    <category term="谷歌插件" />
    <category term="Google-Chrome" />
    <entry>
        <id>https://blog.imlete.cn/article/Use-lint-staged.html</id>
        <title>使用 Lint-staged 校验 Git 暂存区代码是否符合标准</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Use-lint-staged.html"/>
        <content type="html">&lt;h2 id=&#34;什么是-Lint-staged&#34;&gt;&lt;a href=&#34;#什么是-Lint-staged&#34; class=&#34;headerlink&#34; title=&#34;什么是 Lint-staged&#34;&gt;&lt;/a&gt;什么是 Lint-staged&lt;/h2&gt;&lt;p&gt;在 Git 暂存区执行相关的操作，如对暂存区进行&lt;code&gt;eslint&lt;/code&gt;或是&lt;code&gt;prettier&lt;/code&gt;，也可以自定义一些脚本&lt;/p&gt;
&lt;p&gt;官方写着很有趣的一段话:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Run linters against staged git files and don’t let 💩 slip into your code base!&lt;br&gt;对暂存区进行代码校验，不要让 💩(便便)溜进你的代码库！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a href=&#34;#正文&#34; class=&#34;headerlink&#34; title=&#34;正文&#34;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;有些人可能会问，我都有&lt;code&gt;eslint&lt;/code&gt;和&lt;code&gt;prettier&lt;/code&gt;为什么还要用&lt;code&gt;lint-staged&lt;/code&gt;?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;简而言之: &lt;code&gt;lint-staged&lt;/code&gt;只对已修改的或是将要提交到仓库的文件进行校验&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为&lt;code&gt;lint-staged&lt;/code&gt;仅对暂存区的文件进行校验，而&lt;code&gt;eslint&lt;/code&gt;和&lt;code&gt;prettier&lt;/code&gt;则是全局或是指定某个目录下的的所有文件进行校验，在执行效率上肯定是&lt;code&gt;lint-staged&lt;/code&gt;更胜一筹&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install lint-staged -D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;编辑&lt;code&gt;package.json&lt;/code&gt;文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果同时校验&lt;code&gt;.vue&lt;/code&gt;则可以这么写&lt;code&gt;&amp;quot;*.&amp;#123;js,vue&amp;#125;&amp;quot;: &amp;quot;npx eslint --fix&amp;quot;&lt;/code&gt;&lt;br&gt;其内部使用的匹配规则是&lt;a href=&#34;https://github.com/micromatch/micromatch&#34;&gt;micromatch&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;lint-staged&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;*.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;npx eslint --fix&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;完整&lt;code&gt;package.json&lt;/code&gt;文件&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;study-notes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;prepare&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;npx husky install&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ISC&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@commitlint/cli&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^16.2.3&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@commitlint/config-conventional&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^16.2.1&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;eslint&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^8.13.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;husky&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^7.0.4&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;lint-staged&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^12.3.7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;commitlint&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;extends&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;@commitlint/config-conventional&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;lint-staged&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;*.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;npx eslint --fix&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;配置好后，当你执行&lt;code&gt;git add .&lt;/code&gt;后就可以使用&lt;code&gt;npx lint-staged&lt;/code&gt;命令来校验暂存区的代码文件了&lt;/p&gt;
&lt;p&gt;有些人可能会说，这么麻烦，那我还不如直接在&lt;code&gt;git add .&lt;/code&gt;之前使用&lt;code&gt;npx eslint --fix .&lt;/code&gt;这也不是更好吗？&lt;/p&gt;
&lt;p&gt;文章开头一句说了，&lt;code&gt;lint-staged&lt;/code&gt;只对暂存区的代码文件进行 lint，执行效率远超&lt;code&gt;npx eslint --fix .&lt;/code&gt;命令，该命令会对全局的文件进行校验，不过有没有问题都要校验一遍(如果项目很大，那么这个差距就显现了)&lt;/p&gt;
&lt;p&gt;如果一个项目有&lt;code&gt;几百&lt;/code&gt;或&lt;code&gt;上千&lt;/code&gt;个文件，而我只是修改了一个文件，比如说一个标点符号或者是其它修改，那么&lt;code&gt;npx eslint --fix .&lt;/code&gt;可能需要校验很久，而使用&lt;code&gt;npx lint-staged&lt;/code&gt;则只需要校验这个文件即可&lt;/p&gt;
&lt;h3 id=&#34;配合-Husky-使用&#34;&gt;&lt;a href=&#34;#配合-Husky-使用&#34; class=&#34;headerlink&#34; title=&#34;配合 Husky 使用&#34;&gt;&lt;/a&gt;配合 Husky 使用&lt;/h3&gt;&lt;p&gt;关于如何使用 husky 可以参考这篇文章: &lt;a href=&#34;/article/Use-husky-manage-git-project.html&#34;&gt;使用 Husky(哈士奇)管理 Git 项目&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;添加 hook 后执行&lt;code&gt;git commit&lt;/code&gt;之前就会对暂存区的文件进行校验了&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npx husky add .husky/pre-commit &lt;span class=&#34;string&#34;&gt;&amp;#x27;npx lint-staged&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="JavaScript" />
        <category term="Git" />
        <updated>2022-04-12T16:57:17.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Commitlint-lint-commit-messages.html</id>
        <title>使用 commitlint 来检查提交的信息是否符合规范</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Commitlint-lint-commit-messages.html"/>
        <content type="html">&lt;h2 id=&#34;什么是-commitlint&#34;&gt;&lt;a href=&#34;#什么是-commitlint&#34; class=&#34;headerlink&#34; title=&#34;什么是 commitlint&#34;&gt;&lt;/a&gt;什么是 commitlint&lt;/h2&gt;&lt;p&gt;commitlint 用来校验你提交的信息是否符合规范，它和&lt;code&gt;commitizen&lt;/code&gt;很类似，它们都做一件事，那就是让你提交的信息更规范&lt;/p&gt;
&lt;h2 id=&#34;commitlint-和-commitizen-的区别&#34;&gt;&lt;a href=&#34;#commitlint-和-commitizen-的区别&#34; class=&#34;headerlink&#34; title=&#34;commitlint 和 commitizen 的区别&#34;&gt;&lt;/a&gt;commitlint 和 commitizen 的区别&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;commitlint: 校验 git commit 信息是否符合规范(就像 eslint 一样)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;commitizen: 辅助 git commit 信息更加规范(就像代码提示一样)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以你可以把它们两个结合起来使用效果更佳哦~&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install --save-dev @commitlint/config-conventional @commitlint/cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;创建配置文件，可以手动创建，也可以使用命令创建&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;module.exports = &amp;#123;extends: [&amp;#x27;@commitlint/config-conventional&amp;#x27;]&amp;#125;&amp;quot;&lt;/span&gt; &amp;gt; commitlint.config.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后就会生成&lt;code&gt;commitlint.config.js&lt;/code&gt;文件，其中包含&lt;code&gt;module.exports = &amp;#123;extends: [&amp;#39;@commitlint/config-conventional&amp;#39;]&amp;#125;&lt;/code&gt;代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个配置也可以写在&lt;code&gt;package.json&lt;/code&gt;文件中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;study-notes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;prepare&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;husky install&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ISC&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@commitlint/cli&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^16.2.3&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@commitlint/config-conventional&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^16.2.1&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;husky&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^7.0.4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;commitlint&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;extends&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;@commitlint/config-conventional&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;配合commitizen使用&#34;&gt;&lt;a href=&#34;#配合commitizen使用&#34; class=&#34;headerlink&#34; title=&#34;配合commitizen使用&#34;&gt;&lt;/a&gt;配合commitizen使用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;配合 commitizen 可以参考这篇文章: &lt;a href=&#34;/article/Normalizing-git-commit-messages.html&#34;&gt;使用commitizen规范化git提交信息&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;配合husky使用&#34;&gt;&lt;a href=&#34;#配合husky使用&#34; class=&#34;headerlink&#34; title=&#34;配合husky使用&#34;&gt;&lt;/a&gt;配合husky使用&lt;/h2&gt;&lt;p&gt;关于如何使用husky可以参考这篇文章: &lt;a href=&#34;/article/Use-husky-manage-git-project.html&#34;&gt;使用Husky(哈士奇)管理Git项目&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;添加hook&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npx husky add .husky/commit-msg &lt;span class=&#34;string&#34;&gt;&amp;#x27;npx --no -- commitlint --edit &amp;quot;$1&amp;quot;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 因为有些命令行不支持上面这条命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果上面这条对你的项目不管用，可以试试以下其它命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npx husky add .husky/commit-msg \&amp;quot;npx --no -- commitlint --edit &lt;span class=&#34;string&#34;&gt;&amp;#x27;$1&amp;#x27;&lt;/span&gt;\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npx husky add .husky/commit-msg &lt;span class=&#34;string&#34;&gt;&amp;quot;npx --no -- commitlint --edit &lt;span class=&#34;variable&#34;&gt;$1&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;测试&#34;&gt;&lt;a href=&#34;#测试&#34; class=&#34;headerlink&#34; title=&#34;测试&#34;&gt;&lt;/a&gt;测试&lt;/h2&gt;&lt;p&gt;不符合规范的提交信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;⧗   input: abc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;✖   subject may not be empty [subject-empty]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;✖   &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt; may not be empty [type-empty]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;✖   found 2 problems, 0 warnings&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ⓘ   Get &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;: https://github.com/conventional-changelog/commitlint/&lt;span class=&#34;comment&#34;&gt;#what-is-commitlint&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;husky - commit-msg hook exited with code 1 (error)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



</content>
        <category term="Git" />
        <updated>2022-04-12T15:39:56.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Use-husky-manage-git-project.html</id>
        <title>使用Husky(哈士奇)管理Git项目</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Use-husky-manage-git-project.html"/>
        <content type="html">&lt;h2 id=&#34;什么是-Husky-哈士奇&#34;&gt;&lt;a href=&#34;#什么是-Husky-哈士奇&#34; class=&#34;headerlink&#34; title=&#34;什么是 Husky(哈士奇)&#34;&gt;&lt;/a&gt;什么是 Husky(哈士奇)&lt;/h2&gt;&lt;p&gt;Husky 就是狗，没错就是拆家的那家伙，也不知道&lt;a href=&#34;https://github.com/typicode&#34;&gt;@typicode&lt;/a&gt;是怎么想的，尽然起了这么&lt;strong&gt;有趣&lt;/strong&gt;的一个项目名字&lt;/p&gt;
&lt;p&gt;Husky 可以方便快速的使用&lt;code&gt;Git hooks&lt;/code&gt;，帮你简单的配置项目，同时 Husky 可以将&lt;code&gt;Git hooks&lt;/code&gt;同步到仓库，让整个团队能使用相同的&lt;code&gt;Git hooks&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是-Git-Hooks&#34;&gt;&lt;a href=&#34;#什么是-Git-Hooks&#34; class=&#34;headerlink&#34; title=&#34;什么是 Git Hooks&#34;&gt;&lt;/a&gt;什么是 Git Hooks&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;文档说明中文: &lt;a href=&#34;https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90&#34;&gt;https://git-scm.com/book/zh/v2/自定义-Git-Git-钩子&lt;/a&gt;&lt;br&gt;文档说明英文: &lt;a href=&#34;https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks&#34;&gt;https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为提交到仓库后&lt;code&gt;.git&lt;/code&gt;文件是不存在仓库中的，而&lt;code&gt;Git hooks&lt;/code&gt;却在&lt;code&gt;.git/hooks&lt;/code&gt;目录下&lt;/p&gt;
&lt;p&gt;现在假设你是项目组长，一些项目需要使用的技术和库，需要你来配置，然后让小组成员去使用，那么当你使用了&lt;code&gt;Git hooks&lt;/code&gt;后，只有你本地这台电脑能使用&lt;code&gt;Git hooks&lt;/code&gt;，其它人&lt;strong&gt;Clone(克隆)&lt;/strong&gt;或&lt;strong&gt;Pull(拉取)&lt;/strong&gt;，都不会得到你配置的&lt;code&gt;Git hooks&lt;/code&gt;，这时就可以使用&lt;code&gt;Husky&lt;/code&gt;来同步&lt;code&gt;Git hooks&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装-Husky&#34;&gt;&lt;a href=&#34;#安装-Husky&#34; class=&#34;headerlink&#34; title=&#34;安装 Husky&#34;&gt;&lt;/a&gt;安装 Husky&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install husky -D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;为什么使用&lt;code&gt;prepare&lt;/code&gt;当作 key？&lt;br&gt;因为&lt;code&gt;prepare&lt;/code&gt;是 npm 的生命周期命令，它会在&lt;code&gt;npm install&lt;/code&gt;完成后执行，所以当如果有人克隆了项目并执行了&lt;code&gt;npm install&lt;/code&gt;后就会自动初始化 husky 来管理 hook&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编辑&lt;code&gt;package.json&lt;/code&gt;的&lt;code&gt;scripts&lt;/code&gt;并并运行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm set-script prepare &lt;span class=&#34;string&#34;&gt;&amp;quot;npx husky install&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm run prepare&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中&lt;code&gt;npm set-script&lt;/code&gt;命令仅限 npm 版本是 7.x 版本以上，如果不是则需要手动编辑&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;study-notes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;prepare&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;husky install&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ISC&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;husky&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;^7.0.4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;添加-hook&#34;&gt;&lt;a href=&#34;#添加-hook&#34; class=&#34;headerlink&#34; title=&#34;添加 hook&#34;&gt;&lt;/a&gt;添加 hook&lt;/h2&gt;&lt;p&gt;举例：如果在进行 git commit 之前对代码进行&lt;code&gt;eslint&lt;/code&gt;检查，那么可以使用&lt;code&gt;pre-commit&lt;/code&gt;(这仅仅是个例子，你可以灵活的使用 hook 完成一些你想要完成的事情)&lt;/p&gt;
&lt;p&gt;关于&lt;code&gt;pre-commit&lt;/code&gt;的说明可以在官方文档查阅或是直接打开&lt;code&gt;.git\hooks\pre-commit.sample&lt;/code&gt;查看注释说明&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npx husky add .husky/pre-commit &lt;span class=&#34;string&#34;&gt;&amp;quot;npx eslint --fix&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当你执行&lt;code&gt;git commit -m &amp;quot;xxx&amp;quot;&lt;/code&gt;提交代码之前就会自动执行 eslint&lt;/p&gt;
&lt;p&gt;例如添加 hook 让他在提交代码前执行&lt;code&gt;package.json&lt;/code&gt;中的 test 脚本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npx husky add .husky/pre-commit &lt;span class=&#34;string&#34;&gt;&amp;quot;npm test&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;test husky pre-commit&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;test 脚本输出一段内容 &lt;strong&gt;“Error: no test specified”&lt;/strong&gt; 后还行了&lt;code&gt;exit 1&lt;/code&gt;结束命令如下，由于执行了&lt;code&gt;exit 1&lt;/code&gt;结束了命令(相当于我们按了ctrl+c一样)所以并未提交&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;test husky pre-commit&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; study-notes@1.0.0 &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Error: no test specified&amp;quot;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Error: no test specified&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;husky - pre-commit hook exited with code 1 (error)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Git" />
        <updated>2022-04-12T14:16:02.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Normalizing-git-commit-messages.html</id>
        <title>使用commitizen规范化git提交信息</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Normalizing-git-commit-messages.html"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如果你足够细心观察的化，你会发现哪些&lt;strong&gt;大型项目&lt;/strong&gt;他们的&lt;code&gt;git comment&lt;/code&gt;信息是有规律，且非常规范的&lt;/p&gt;
&lt;p&gt;例如 Vue 项目仓库&lt;br&gt;他们都是经过规定的&lt;strong&gt;格式&lt;/strong&gt;以及&lt;strong&gt;类型&lt;/strong&gt;和一些规范进行提交的&lt;br&gt;&lt;img src=&#34;/img/Normalizing-git-commit-messages/Vue-Repo.png&#34; alt=&#34;Vue Repo&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么这真的是认为一个一个的编写吗？&lt;br&gt;答: 当然不是，每一个项目都有不同的格式、类型、规范标准，如果是中小型项目可以直接使用普通默认的标准，但大型项目他们都会自定义一些标准供团队所有人去遵循，显然它是需要一款工具来进行管理这些标准的&lt;/p&gt;
&lt;h2 id=&#34;commitizen&#34;&gt;&lt;a href=&#34;#commitizen&#34; class=&#34;headerlink&#34; title=&#34;commitizen&#34;&gt;&lt;/a&gt;commitizen&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;配合 commitlint 可以参考这篇文章: &lt;a href=&#34;/article/Commitlint-lint-commit-messages.html&#34;&gt;使用 commitlint 来检查提交的信息是否符合规范&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/commitizen/cz-cli&#34;&gt;commitizen&lt;/a&gt; 是一个 cli 工具，它可以用于规范化 git commit 信息，可以代替 git commit 命令&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 全局安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install -g commitizen cz-conventional-changelog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 然后在系统根目录创建一个配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123; &amp;quot;path&amp;quot;: &amp;quot;cz-conventional-changelog&amp;quot; &amp;#125;&amp;#x27;&lt;/span&gt; &amp;gt; ~/.czrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;用法: 你可以使用&lt;code&gt;git cz&lt;/code&gt;或&lt;code&gt;cz&lt;/code&gt;来代替&lt;code&gt;git commit&lt;/code&gt;，你也可以使用&lt;code&gt;git-cz&lt;/code&gt;，它是&lt;code&gt;cz&lt;/code&gt;的别名(一般直接使用 git cz 就可以了)&lt;/p&gt;
&lt;p&gt;当你使用&lt;code&gt;git cz&lt;/code&gt;时系统会提示你填写必填的字段，并且你的提交消息将根据项目维护者定义的标准进行格式化&lt;br&gt;&lt;img src=&#34;/img/Normalizing-git-commit-messages/git-cz.png&#34; alt=&#34;Git cz&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用&#34;&gt;&lt;a href=&#34;#使用&#34; class=&#34;headerlink&#34; title=&#34;使用&#34;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;p&gt;接下来就是将传统的&lt;code&gt;git add .&lt;/code&gt;—&amp;gt;&lt;code&gt;git commit -m&amp;quot;xxx&amp;quot;&lt;/code&gt;—&amp;gt;&lt;code&gt;git push&lt;/code&gt;替换为&lt;code&gt;git add .&lt;/code&gt;—&amp;gt;&lt;code&gt;git cz&lt;/code&gt;—&amp;gt;&lt;code&gt;git push&lt;/code&gt;就可以了，根据提示填写相关&lt;strong&gt;commit&lt;/strong&gt;标准即可(会用翻译吧？会自己查阅文档和看仓库 README 吧？)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果使用的是本地安装 &lt;code&gt;git add .&lt;/code&gt;—&amp;gt;&lt;code&gt;npx cz&lt;/code&gt;—&amp;gt;&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上基本上已经足够使用了，若想更深入的了解和自定义使用，可以自己查看文档&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我觉得不因该写的特别细，能够满足基本的使用条件即可，只需要了解了使用方法后，需要自己实践、摸索、思考。这样才能把知识牢记于心，这才是真正的学会了&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Git" />
        <updated>2022-04-03T17:08:59.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/git-tag-release-distinction.html</id>
        <title>git中tag与release的创建以及两者的区别</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/git-tag-release-distinction.html"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文未经过&lt;strong&gt;原文作者转载许可&lt;/strong&gt;，全由博主一人擅自抄录到本博客，博主只是觉得原文作者写的很好，所以将其收录到自己的博客内，以便博主本人日后对该知识有所遗忘时，能在自己的博客内自行查阅，再此感谢&lt;strong&gt;原文作者&lt;/strong&gt;写的这篇好文。如有侵权，请联系删除&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文可能于原文有所不同，不过版权依然归&lt;strong&gt;原文作者&lt;/strong&gt;所有&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址: &lt;a href=&#34;https://www.jianshu.com/p/79ecf4fe5079&#34;&gt;https://www.jianshu.com/p/79ecf4fe5079&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;定义&#34;&gt;&lt;a href=&#34;#定义&#34; class=&#34;headerlink&#34; title=&#34;定义&#34;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;标签（tag）是特定提交（commit)一个指针，也就是每个 tag 对应一个特定的 commit。&lt;/p&gt;
&lt;p&gt;Release 是具有 changelogs 和二进制文件的一级对象，它可以代表超出 Git 架构本身的一个特定时间点之前的所有项目历史。也就是通过 release，不但能够通过源码体现出项目历史，还能通过已经编译好的二进制文件来进一步描述此时的项目状态。“超出 Git 架构本身“的意思则在于，git 本身只能记录项目修改，本质上不适合将编译好的项目二进制文件记录下来。而通过 release 则把项目二进制文件保存了下来，方便用户下载，也方便查找特定版本的二进制文件。&lt;/p&gt;
&lt;p&gt;以下是&lt;a href=&#34;https://github.com/blog/1547-release-your-software&#34;&gt;Github official announcement&lt;/a&gt;所定义原文：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eleases are first-class objects with changelogs and binary assets that present a full project history beyond Git artifacts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;创建方法&#34;&gt;&lt;a href=&#34;#创建方法&#34; class=&#34;headerlink&#34; title=&#34;创建方法&#34;&gt;&lt;/a&gt;创建方法&lt;/h2&gt;&lt;p&gt;Release 分为两种：lightweight and annotated.&lt;/p&gt;
&lt;p&gt;创建 lightweight 类型的 tag：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag v1.4-lw&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;创建 annotated 类型的 tag：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag -a v1.4 -m &lt;span class=&#34;string&#34;&gt;&amp;quot;my version 1.4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过 tag 可以返回到项目的特定状态下，所以可以将 tag 看作是在大量 commit 中设定的书签。&lt;/p&gt;
&lt;p&gt;创建 release，则需要通过源码托管商的网页操作界面来进行，一般会要求填写 tag 名、分支以及相应的发布说明，还可上传编译好的程序、打包好的文件等。&lt;/p&gt;
&lt;h2 id=&#34;区别&#34;&gt;&lt;a href=&#34;#区别&#34; class=&#34;headerlink&#34; title=&#34;区别&#34;&gt;&lt;/a&gt;区别&lt;/h2&gt;&lt;p&gt;标签是 git 中的概念，而 release 则是 Github、码云等源码托管商所提供的更高层的概念。也就是说 git 本身是没有 release 这个概念的，只有 tag。&lt;/p&gt;
&lt;p&gt;两者之间的关系则是，release 基于 tag，为 tag 添加更丰富的信息，一般是编译好的文件。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;Release 是源码托管商对 git 的 tag 功能的增强。通过 git 提供的 tag 功能，我们可以给项目进行版本标识，以识别特定的版本，如&lt;code&gt;v0.1.0&lt;/code&gt;、&lt;code&gt;v1.0.0&lt;/code&gt;等。而通过源码托管商提供的 release 功能，在 tag 的基础上我们可以添加编译好的二进制文件等，如&lt;code&gt;.deb&lt;/code&gt;、&lt;code&gt;.exe&lt;/code&gt;等给特定的版本提供更多的信息，方便用户，也方便后期查找特定版本的程序。&lt;/p&gt;
</content>
        <category term="记录" />
        <category term="Git" />
        <updated>2022-04-03T15:54:38.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/git-clean-all-comment.html</id>
        <title>git清空所有comment记录(含远程仓库)</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/git-clean-all-comment.html"/>
        <content type="html">&lt;p&gt;当你再开发的时候，新建了一个仓库进行版本控制，每天晚上都会把当天完成内容push到仓库&lt;br&gt;可到准备发布时，你不想让别人看到你的烂代码&lt;br&gt;你可能会选择重命名仓库，然后再新建仓库，从而得到之前仓库的昵称，你也可能会选择全部清空所有提交记录&lt;br&gt;本篇内容主要记录一下清空仓库的所有提交记录&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a href=&#34;#正文&#34; class=&#34;headerlink&#34; title=&#34;正文&#34;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创建orphan分支&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于orphan分支是什么，可以直接去官网看更详细的说明&lt;br&gt;orphan: 创建一个一个无提交记录的分支，如果只是创建了分支，而未有任何提交记录，其实它并没有创建&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git checkout --orphan &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 分支名自定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;添加所有文件到暂存区&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;提交到本地仓库&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git commit -m&lt;span class=&#34;string&#34;&gt;&amp;#x27;commit message&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;删除原本的分支(master)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git branch -D master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;重命名当前分支&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git branch -m master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;push到远程仓库&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin master --force&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 这里要使用强行提交，因为你本地的提交记录和远程仓库的不一致，无法匹配被拒绝push&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## --force 可以无视这一点，直接覆盖远程仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="记录" />
        <category term="Git" />
        <updated>2021-09-01T19:09:57.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Git-Multiple-Accounts-Switch.html</id>
        <title>Git一台电脑多账号切换使用</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Git-Multiple-Accounts-Switch.html"/>
        <content type="html">&lt;p&gt;最近多注册了一个Github账号，专门用于fork其他优秀项目的&lt;a href=&#34;https://github.com/lete-fork&#34;&gt;lete-fork&lt;/a&gt;&lt;br&gt;难免会在本地push一些代码上去，但Git有个毛病，它切换账户起来是非常麻烦的，各种上网查资料，和网友的咨询后，总结出了这篇文章内容&lt;br&gt;参考: &lt;a href=&#34;https://blog.csdn.net/lqlqlq007/article/details/80613272&#34;&gt;https://blog.csdn.net/lqlqlq007/article/details/80613272&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a href=&#34;#正文&#34; class=&#34;headerlink&#34; title=&#34;正文&#34;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;这里建议使用ssh方式，千万不要使用https方式，之前我非常喜欢使用https方式clone和push、pull，每次操作都要输入用户名密码(其实我觉得者并没有什么烦的，直到最近我使用了lete-fork账号push的时候，需要切换账号，还要修改&lt;code&gt;git config --gloabl user.name &amp;quot;xxxx&amp;quot;&lt;/code&gt;和&lt;code&gt;git config --gloabl user.email &amp;quot;xxxx&amp;quot;&lt;/code&gt;后我才知道，https是真的麻烦，其实就是我不想配置ssh)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我现在有两个Github账号分别是&lt;code&gt;lete114&lt;/code&gt;和&lt;code&gt;lete-fork&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我现在的全局用户是lete114，可使用&lt;code&gt;git config --list&lt;/code&gt;进行查看&lt;code&gt;user.name&lt;/code&gt;和&lt;code&gt;user.email&lt;/code&gt;项&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git config --list &lt;span class=&#34;comment&#34;&gt;## 执行了该命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diff.astextplain.textconv=astextplain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.clean=git-lfs clean -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.smudge=git-lfs smudge -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.process=git-lfs filter-process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.required=&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http.sslbackend=openssl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http.sslcainfo=G:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core.autocrlf=&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core.fscache=&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core.symlinks=&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;credential.helper=manager&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.clean=git-lfs clean -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.smudge=git-lfs smudge -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.process=git-lfs filter-process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter.lfs.required=&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user.name=lete114 &lt;span class=&#34;comment&#34;&gt;# 全局的用户名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user.email=lete@lete114.top &lt;span class=&#34;comment&#34;&gt;# 全局的邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http.version=HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http.postbuffer=524288000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http.sslverify=&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;credential.helper=store&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core.quotepath=&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core.repositoryformatversion=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;修改当前项目账户&#34;&gt;&lt;a href=&#34;#修改当前项目账户&#34; class=&#34;headerlink&#34; title=&#34;修改当前项目账户&#34;&gt;&lt;/a&gt;修改当前项目账户&lt;/h3&gt;&lt;p&gt;此时我所在的项目是lete-fork的，我修改了部分代码，并想上传到远程仓库(我肯定要切换到lete-fork账户再进行提交)&lt;br&gt;由于我上面的全局账户是lete114，那么我所有的git操作都是使用的lete114账户进行的，这时我得使用lete-fork账户进行操作(仅当前项目)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此处声明一下&lt;code&gt;--global&lt;/code&gt;的作用,global表示全局，如果写了–global的话就会修改全局账户，此处我只需使用lete-fork账户进行push操作，所以无需使用全局(一般全局账户都是自己的大号)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;######### 此处命令不要使用，只是演示说明--global的作用，请执行下方代码块的命令 #########&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置当前项目的账户用户名是lete-fork&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &lt;span class=&#34;string&#34;&gt;&amp;quot;lete-fork&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置当前项目的账户邮箱是lete-fork绑定的邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &lt;span class=&#34;string&#34;&gt;&amp;quot;lete0429@gmail.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只需以下命令进行局部账户修改(需要执行的命令是如下命令，并非上方代码块)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置当前项目的账户用户名是lete-fork&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config user.name &lt;span class=&#34;string&#34;&gt;&amp;quot;lete-fork&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置当前项目的账户邮箱是lete-fork绑定的邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config user.email &lt;span class=&#34;string&#34;&gt;&amp;quot;lete0429@gmail.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开当前目录下的&lt;code&gt;.git/config&lt;/code&gt;文件可用看出下方的&lt;code&gt;[user]&lt;/code&gt;多了name和email&lt;/p&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[core]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	repositoryformatversion = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	filemode = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bare = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	logallrefupdates = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	symlinks = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ignorecase = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[remote &amp;quot;origin&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	url = git@github.com:lete-fork/test-push.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fetch = +refs/heads/*:refs/remotes/origin/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[branch &amp;quot;master&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	remote = origin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	merge = refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[user]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	name = lete-fork&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	email = lete0429@gmail.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;配置lete114账户的SSH&#34;&gt;&lt;a href=&#34;#配置lete114账户的SSH&#34; class=&#34;headerlink&#34; title=&#34;配置lete114账户的SSH&#34;&gt;&lt;/a&gt;配置lete114账户的SSH&lt;/h3&gt;&lt;p&gt;此步骤是配置lete114账户的SSH&lt;br&gt;生成SSH&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -C &lt;span class=&#34;string&#34;&gt;&amp;quot;你的邮箱&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#ssh-keygen -t rsa -C &amp;quot;lete@lete114.top&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行命令后需要进行3次或4次确认：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确认秘钥的保存路径(如果不需要改路径则直接回车)&lt;/li&gt;
&lt;li&gt;如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖(如果之前的秘钥不再需要则直接回车覆盖，如需要则手动拷贝到其他目录后再覆盖)&lt;/li&gt;
&lt;li&gt;创建密码(如果不需要密码则直接回车)&lt;/li&gt;
&lt;li&gt;确认密码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此处我是一路回车，并没有设置什么，此后默认生成路径是&lt;code&gt;C:/Users/你电脑的当前用户名/.ssh&lt;/code&gt;(需要开启显示隐藏目录)&lt;br&gt;.ssh目录下生成两个文件名为&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;复制id_rsa.pub文件里的全部内容，打开GitHub的账户设置(非仓库设置)&lt;br&gt;GitHub账户设置：&lt;a href=&#34;https://github.com/settings/keys&#34;&gt;https://github.com/settings/keys&lt;/a&gt;&lt;br&gt;然后点击&lt;code&gt;New SSH Key&lt;/code&gt;按钮添加SSH配置，其中&lt;code&gt;Title&lt;/code&gt;你可用自定义&lt;code&gt;Key&lt;/code&gt;是刚刚复制id_rsa.pub文件里的全部内容，完成后点击&lt;code&gt;Add SSH Key&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;克隆仓库是使用SSH方式，初次使用SSH方式会出现&lt;code&gt;The authenticity of host ‘github.com (52.74.223.119)’ can’t be established.&lt;/code&gt;根据提示输入yes即可(随后&lt;code&gt;C:/Users/你电脑的当前用户名/.ssh&lt;/code&gt;目录下会多出&lt;code&gt;known_hosts&lt;/code&gt;文件)&lt;/p&gt;
&lt;h3 id=&#34;配置lete-fork账户的SSH&#34;&gt;&lt;a href=&#34;#配置lete-fork账户的SSH&#34; class=&#34;headerlink&#34; title=&#34;配置lete-fork账户的SSH&#34;&gt;&lt;/a&gt;配置lete-fork账户的SSH&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;C:/Users/你电脑的当前用户名/.ssh&lt;/code&gt;目录下打开&lt;code&gt;Git Bash Here&lt;/code&gt;&lt;br&gt;生成SSH&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -C &lt;span class=&#34;string&#34;&gt;&amp;quot;你的邮箱&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#ssh-keygen -t rsa -C &amp;quot;lete0429@gmail.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同上方lete114账户生成类似，但我这里要提醒一句，这次不能一路回车了&lt;br&gt;显示&lt;code&gt;Enter file in which to save the key (/c/Users/Lete/.ssh/id_rsa):&lt;/code&gt;时就不要一路回车了，这路你需要重新起一个名字&lt;br&gt;为了区分我在后面追加了一个fork即&lt;code&gt;id_rsa_fork&lt;/code&gt;(为了不和lete114账户冲突，此处建议规范，同我的命名方式一样在&lt;code&gt;id_rsa&lt;/code&gt;后面追加&lt;code&gt;_xxx_xxx&lt;/code&gt;命名法)，随后就可用一路回车了&lt;/p&gt;
&lt;p&gt;生成后同上方lete114账户一样在账户设置里添加&lt;code&gt;id_rsa_fork.pub&lt;/code&gt;里的全部内容到SSH Key&lt;/p&gt;
&lt;h3 id=&#34;账户切换&#34;&gt;&lt;a href=&#34;#账户切换&#34; class=&#34;headerlink&#34; title=&#34;账户切换&#34;&gt;&lt;/a&gt;账户切换&lt;/h3&gt;&lt;p&gt;默认使用的是&lt;code&gt;id_rsa&lt;/code&gt;的SSH也就是lete114的SSH，切换需要使用命令切换到&lt;code&gt;id_rsa_fork&lt;/code&gt;(lete-fork账户)&lt;br&gt;可以使用以下命令查看当前&lt;code&gt;Git Bash Here&lt;/code&gt;使用的是哪个账户的SSH&lt;br&gt;(注意：如果你在其他Git Bash Here里切换了SSH账户，当前的Git Bash Here是不会跟着切换的，也就是说你每次打开一个新的Git Bash Here就必须切换，否则默认就是&lt;code&gt;id_rsa&lt;/code&gt;(lete114账户))&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 执行上方命令后会输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## Hi lete114! You&amp;#x27;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;以下命令可以新增秘钥(注意秘钥地址要换成你要切换用户对应的秘钥地址)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 切换到 id_rsa_fork (lete-fork账户SSH)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-add ~/.ssh/id_rsa_fork&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上方命令执行后你可能会发现输出了这句话&lt;code&gt;Could not open a connection to your authentication agent.&lt;/code&gt;&lt;br&gt;则先执行这个命令&lt;code&gt;ssh-agent bash&lt;/code&gt;再执行切换账户&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-agent bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 切换到 id_rsa_fork (lete-fork账户SSH)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-add ~/.ssh/id_rsa_fork&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 执行上方命令后会输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## Identity added: /c/Users/Lete/.ssh/id_rsa_fork (lete0429@gmail.com)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再次输入&lt;code&gt;ssh -T git@github.com&lt;/code&gt;查看当前使用的是哪个账户&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 执行上方命令后会输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## Hi lete-fork! You&amp;#x27;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再次提醒：如果你现在已经切换到lete-fork账户了，关闭了Git Bash Here后重新打开Git Bash Here则会变为lete114账户.&lt;/p&gt;
</content>
        <category term="Git" />
        <updated>2021-03-30T19:51:06.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Git-Pull.html</id>
        <title>Git Pull 拉取的用法</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Git-Pull.html"/>
        <content type="html">&lt;p&gt;最近写&lt;a href=&#34;https://github.com/lete114/hexo-theme-MengD&#34;&gt;Hexo-MengD(萌典)&lt;/a&gt;主题老出现bug不得不使用这些Git指令&lt;br&gt;而且这些命令不常用，记不住，就记录一下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其他于Git命令相关的文章&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Merging.html&#34;&gt;Git 解决 (master|MERGING)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Push-Reset.html&#34;&gt;Git撤回Push到远程的代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Merge.html&#34;&gt;Git分支合并(dev合并到master)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;写法(其中&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;只是为了标识)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git pull &amp;lt;远程主机名&amp;gt; &amp;lt;远程分支名&amp;gt;:&amp;lt;本地分支名&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git pull origin master:master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将远程主机origin的master分支拉取下来，与本地的master分支合并。&lt;br&gt;后面的冒号可以省略(这种写法不推荐，为避免不必要的麻烦，还是补齐比较好)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git pull origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Git" />
        <updated>2021-02-05T16:08:01.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Git-Merge.html</id>
        <title>Git分支合并(dev合并到master)</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Git-Merge.html"/>
        <content type="html">&lt;p&gt;最近写&lt;a href=&#34;https://github.com/lete114/hexo-theme-MengD&#34;&gt;Hexo-MengD(萌典)&lt;/a&gt;主题老出现bug不得不使用这些Git指令&lt;br&gt;而且这些命令不常用，记不住，就记录一下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其他于Git命令相关的文章&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Merging.html&#34;&gt;Git 解决 (master|MERGING)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Push-Reset.html&#34;&gt;Git撤回Push到远程的代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Pull.html&#34;&gt;Git Pull 拉取的用法&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a href=&#34;#正文&#34; class=&#34;headerlink&#34; title=&#34;正文&#34;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;当我们在&lt;code&gt;dev&lt;/code&gt;分支中完成了项目的开发与测试，测试无bug后执行了如下命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m&lt;span class=&#34;string&#34;&gt;&amp;#x27;提交代码&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push origin dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么如何将开发完成的代码合并到主分支(master)呢？&lt;/p&gt;
&lt;h2 id=&#34;合并分支&#34;&gt;&lt;a href=&#34;#合并分支&#34; class=&#34;headerlink&#34; title=&#34;合并分支&#34;&gt;&lt;/a&gt;合并分支&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;切换到主分支&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;如果你的项目是多人开发的话需要先&lt;code&gt;git pull&lt;/code&gt;拉去代码，如果不是很了解的话上面我已推荐相关文章&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git pull origin master:master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
如果远程分支是与当前分支合并，则冒号后面的部分可以省略。(不过我建议还是写全比较好，有可能会多出一些莫名其妙得问题)&lt;/li&gt;
&lt;li&gt;将dev分支得代码合并到主分支&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git merge dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
你可以执行&lt;code&gt;git status&lt;/code&gt;查看状态，会得到如下提示(你的分支比&lt;code&gt;origin/master&lt;/code&gt;分支早提交了1次)&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your branch is ahead of &lt;span class=&#34;string&#34;&gt;&amp;#x27;origin/master&amp;#x27;&lt;/span&gt; by 1 commits.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &lt;span class=&#34;string&#34;&gt;&amp;quot;git push&amp;quot;&lt;/span&gt; to publish your &lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt; commits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nothing to commit, working tree clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;确认状态正常后执行push操作&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Git" />
        <updated>2021-02-05T16:07:22.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.imlete.cn/article/Git-Push-Reset.html</id>
        <title>Git撤回Push到远程的代码</title>
        <link rel="alternate" href="https://blog.imlete.cn/article/Git-Push-Reset.html"/>
        <content type="html">&lt;p&gt;最近写&lt;a href=&#34;https://github.com/lete114/hexo-theme-MengD&#34;&gt;Hexo-MengD(萌典)&lt;/a&gt;主题老出现bug不得不使用这些Git指令&lt;br&gt;而且这些命令不常用，记不住，就记录一下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其他于Git命令相关的文章&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Merging.html&#34;&gt;Git 解决 (master|MERGING)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Merge.html&#34;&gt;Git分支合并(dev合并到master)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/article/Git-Pull.html&#34;&gt;Git Pull 拉取的用法&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我们已经把代码push到远程仓库后，突然发现了bug，这时候我们就需要代码回滚了&lt;/p&gt;
&lt;p&gt;执行&lt;code&gt;git log&lt;/code&gt;命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Lete@Lete MINGW64 /d/Lete/GitHub/Hexo-Blog (blog)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git &lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 2f05bec11245b8b9b2355efc2abdfa9a8396db29 (HEAD -&amp;gt; blog, origin/blog)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: lete114 &amp;lt;lete@lete114.top&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Thu Feb 4 21:13:33 2021 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    更新主题，修复部署时间长的bug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit a4ba2439ce6bdb7f6190b84579a88519ed555694&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: lete114 &amp;lt;lete@lete114.top&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Thu Feb 4 20:23:35 2021 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    主题更新&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 下面还有就展示了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中&lt;code&gt;commit 2f05bec11245b8b9b2355efc2abdfa9a8396db29 (HEAD -&amp;gt; blog, origin/blog)&lt;/code&gt;是当前提交的最新代码&lt;br&gt;往下&lt;code&gt;commit a4ba2439ce6bdb7f6190b84579a88519ed555694&lt;/code&gt;就是之前或更早前提交的代码&lt;br&gt;选取其中commit后面的版本号&lt;code&gt;a4ba2439ce6bdb7f6190b84579a88519ed555694&lt;/code&gt;执行如下命令即可回滚到&lt;code&gt;主题更新&lt;/code&gt;这个版本了&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git reset --soft a4ba2439ce6bdb7f6190b84579a88519ed555694&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这时由于本地的代码已回滚，已经和远程仓库代码版本不一致了，就得强制push才能推送(这个操作就完成了远程仓库代码的回滚了)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin master --force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Git" />
        <updated>2021-02-05T16:06:56.000Z</updated>
    </entry>
</feed>
