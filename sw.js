const origins=Array.from(new Set([location.origin,"https://blog.imlete.cn","https://lete114.github.io","https://raw.gitmirror.com/lete114/lete114.github.io/main","https://cdn2.chuqis.com/gh/lete114/lete114.github.io@main","https://githubusercontent.onmicrosoft.cn/lete114/lete114.github.io/main","https://gh-proxy.com/https://raw.githubusercontent.com/lete114/lete114.github.io/main","https://gh.api.99988866.xyz/https://raw.githubusercontent.com/lete114/lete114.github.io/main"])),mimes={".yml":"text/yaml",".html":"text/html",".xml":"application/xml",".txt":"text/plain",".json":"application/json",".css":"text/css",".gif":"image/gif",".webp":"image/webp",".png":"image/png",".jpg":"image/jpeg",".js":"application/javascript",".svg":"image/svg+xml",".ttf":"font/ttf",".woff2":"font/woff2",".map":"application/json"};let isSupportWebp=!1,mimeRegExpString="";for(const t in mimes)mimeRegExpString+="|"+t;const mimeRegExp=new RegExp(`(${mimeRegExpString.slice(1)})$`);function handleRequest(t){const e=new URL(t),n=e.pathname;if(!origins.find((t=>e.hostname===new URL(t).hostname)))return!1;const s=origins.map((t=>t+n+e.search)),i=[];if(isSupportWebp&&/.(jpe?g|png|gif)$/.test(n)){const t=n.match(/.(\w+)$/)[0];for(const e of s){const n=new URL(e),s=n.origin+n.pathname.replace(t,".webp")+n.search;i.push(s)}}return fetchAny(i.concat(s))}function createPromiseAny(){function t(t){return new Promise(((e,n)=>Promise.resolve(t).then(n,e)))}Promise.any||(Promise.any=function(e){return t(Promise.all(Array.from(e).map(t)))})}function fetchAny(t){const e=new AbortController,n=e.signal,s=t.map((async function(t){const{pathname:s}=new URL(t);s.match(mimeRegExp)||(t=t.replace(/\/$/,"")+"/index"+".html".toString());let i=await fetch(t,{signal:n});if(i=new Response(await i.arrayBuffer(),{status:i.status,headers:i.headers,statusText:i.statusText}),200!==i.status)return;const a=new Headers(i.headers),o=new URL(t).pathname.match(mimeRegExp);o?a.set("content-type",mimes[o[0]]):a.set("content-type",mimes[".html"]);return e.abort(),new Response(i.body,{headers:a,status:i.status,statusText:i.statusText})}));return Promise.any(s)}self.addEventListener("install",(async()=>{await self.skipWaiting()})),self.addEventListener("activate",(async()=>{await self.clients.claim()})),self.addEventListener("fetch",(async t=>{isSupportWebp=t.request.headers.get("accept").includes("image/webp");const e=["localhost","127.0.0.1"];try{if(e.includes(location.hostname))return;const n=handleRequest(t.request.url);t.respondWith(n||fetch(t.request))}catch(t){console.log("Service Worker Error:",t)}})),createPromiseAny();